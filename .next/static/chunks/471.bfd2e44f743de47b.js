"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[471],{10471:function(t,e,r){r.r(e),r.d(e,{MetamaskAdapter:function(){return j}});var a=r(4942),n=r(92003),i=r.n(n),o=r(95844),s=r(13631),c=r(2043),h=r.n(c);function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function d(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){(0,a.Z)(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}const p={EIP155:"eip155",SOLANA:"solana"},m=d(d({},p),{},{MULTICHAIN:"multichain"}),u="776218ac4734478c90191dde8cae483c",E=(t,e)=>{const r=e?"number"===typeof e?e:parseInt(e,16):(t=>{if(t===p.EIP155)return 1;if(t===p.SOLANA)return 1;throw new Error("Chain namespace ".concat(t," is not supported"))})(t);return t===p.EIP155?(t=>{const e=p.EIP155;return 1===t?{chainNamespace:e,chainId:"0x1",rpcTarget:"https://mainnet.infura.io/v3/".concat(u),displayName:"Ethereum Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:3===t?{chainNamespace:e,chainId:"0x3",rpcTarget:"https://ropsten.infura.io/v3/".concat(u),displayName:"ropsten",blockExplorer:"https://ropsten.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:4===t?{chainNamespace:e,chainId:"0x4",rpcTarget:"https://rinkeby.infura.io/v3/".concat(u),displayName:"rinkeby",blockExplorer:"https://rinkeby.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:5===t?{chainNamespace:e,chainId:"0x5",rpcTarget:"https://goerli.infura.io/v3/".concat(u),displayName:"goerli",blockExplorer:"https://goerli.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:42===t?{chainNamespace:e,chainId:"0x2a",rpcTarget:"https://kovan.infura.io/v3/".concat(u),displayName:"kovan",blockExplorer:"https://kovan.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:137===t?{chainNamespace:e,rpcTarget:"https://polygon-rpc.com",blockExplorer:"https://polygonscan.com",chainId:"0x89",displayName:"Polygon Mainnet",ticker:"matic",tickerName:"matic"}:80001===t?{chainNamespace:e,rpcTarget:"https://rpc-mumbai.maticvigil.com",blockExplorer:"https://mumbai-explorer.matic.today",chainId:"0x13881",displayName:"Polygon Mumbai Testnet",ticker:"matic",tickerName:"matic"}:56===t?{chainNamespace:e,rpcTarget:"https://bsc-dataseed.binance.org",blockExplorer:"https://bscscan.com",chainId:"0x38",displayName:"Binance SmartChain Mainnet",ticker:"BNB",tickerName:"BNB"}:97===t?{chainNamespace:e,rpcTarget:"https://data-seed-prebsc-2-s3.binance.org:8545",blockExplorer:"https://testnet.bscscan.com",chainId:"0x61",displayName:"Binance SmartChain Testnet",ticker:"BNB",tickerName:"BNB"}:null})(r):t===p.SOLANA?(t=>{const e=p.SOLANA;return 1===t?{chainNamespace:e,blockExplorer:"https://explorer.solana.com",chainId:"0x1",displayName:"Solana Mainnet",rpcTarget:"https://api.mainnet-beta.solana.com",ticker:"SOL",tickerName:"Solana Token"}:2===t?{rpcTarget:"https://api.testnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=testnet",chainId:"0x2",chainNamespace:e,displayName:"testnet",ticker:"SOL",tickerName:"solana"}:3===t?{rpcTarget:"https://api.devnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=devnet",chainId:"0x3",chainNamespace:e,displayName:"devnet",ticker:"SOL",tickerName:"solana"}:null})(r):null};class N extends s.s{constructor(t,e){super(e),(0,a.Z)(this,"code",void 0),(0,a.Z)(this,"message",void 0),this.code=t,this.message=e||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class g extends N{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new g(t,"".concat(g.messages[t],", ").concat(e))}static notFound(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5001,t)}static notInstalled(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5002,t)}static notReady(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5003,t)}static windowBlocked(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5004,t)}static windowClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5005,t)}static incompatibleChainNameSpace(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5006,t)}static duplicateAdapterError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5007,t)}static invalidProviderConfigError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5008,t)}static providerNotReadyError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5009,t)}static rpcConnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5010,t)}static invalidParams(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5011,t)}static invalidNetwork(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return g.fromCode(5013,t)}}(0,a.Z)(g,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class f extends N{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new f(t,"".concat(f.messages[t]).concat(e))}static connectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5111,t)}static disconnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5112,t)}static notConnectedError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5113,t)}static popupClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5114,t)}}function C(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function y(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?C(Object(r),!0).forEach((function(e){(0,a.Z)(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):C(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}(0,a.Z)(f,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user"});const O={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},v=y({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom"},O),b=y({TORUS_EVM:"torus-evm",METAMASK:"metamask"},O),w=y(y({},b),v);function k(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function T(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?k(Object(r),!0).forEach((function(e){(0,a.Z)(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):k(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}const A="external",P={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},D=T(T({},P),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});class I extends o.Ue{constructor(){super(...arguments),(0,a.Z)(this,"adapterData",{}),(0,a.Z)(this,"chainConfig",null)}get chainConfigProxy(){return this.chainConfig?T({},this.chainConfig):null}setChainConfig(t){if(this.status===P.READY)return;if(!t.chainNamespace)throw g.notReady("ChainNamespace is required while setting chainConfig");const e=E(t.chainNamespace,t.chainId);this.chainConfig=T(T({},e),t)}setAdapterSettings(t){}checkConnectionRequirements(){if(this.name!==w.WALLET_CONNECT_V1||this.status!==P.CONNECTING){if(this.status===P.CONNECTING)throw g.notReady("Already connecting");if(this.status===P.CONNECTED)throw f.connectionError("Already connected");if(this.status!==P.READY)throw f.connectionError("Wallet adapter is not ready yet")}}checkInitializationRequirements(){if(this.status!==P.NOT_READY){if(this.status===P.CONNECTED)throw g.notReady("Already connected");if(this.status===P.READY)throw g.notReady("Adapter is already initialized")}}updateAdapterData(t){this.adapterData=t,this.emit(D.ADAPTER_DATA_UPDATED,{adapterName:this.name,data:t})}}h().getLogger("web3auth-logger");class j extends I{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,a.Z)(this,"adapterNamespace",m.EIP155),(0,a.Z)(this,"currentChainNamespace",p.EIP155),(0,a.Z)(this,"type",A),(0,a.Z)(this,"name",w.METAMASK),(0,a.Z)(this,"status",P.NOT_READY),(0,a.Z)(this,"rehydrated",!1),(0,a.Z)(this,"metamaskProvider",null),this.chainConfig=t.chainConfig||null}get provider(){return this.status===P.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(t){throw new Error("Not implemented")}async init(t){if(super.checkInitializationRequirements(),this.metamaskProvider=await i()({mustBeMetaMask:!0}),!this.metamaskProvider)throw g.notInstalled("Metamask extension is not installed");this.status=P.READY,this.emit(D.READY,w.METAMASK);try{t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(e){this.emit(D.ERRORED,e)}}setAdapterSettings(t){}async connect(){if(super.checkConnectionRequirements(),this.chainConfig||(this.chainConfig=E(p.EIP155,1)),this.status=P.CONNECTING,this.emit(D.CONNECTING,{adapter:w.METAMASK}),!this.metamaskProvider)throw f.notConnectedError("Not able to connect with metamask");try{await this.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:t}=this.metamaskProvider;if(t!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=P.CONNECTED,!this.provider)throw f.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",(()=>{this.disconnect()})),this.emit(D.CONNECTED,{adapter:w.METAMASK,reconnected:this.rehydrated}),this.provider}catch(t){throw this.status=P.READY,this.rehydrated=!1,this.emit(D.ERRORED,t),f.connectionError("Failed to login with metamask wallet")}}async disconnect(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==P.CONNECTED)throw f.disconnectionError("Not connected with wallet");null===(t=this.provider)||void 0===t||t.removeAllListeners(),e.cleanup?(this.status=P.NOT_READY,this.metamaskProvider=null):this.status=P.READY,this.rehydrated=!1,this.emit(D.DISCONNECTED)}async getUserInfo(){if(this.status!==P.CONNECTED)throw f.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(t){if(!this.metamaskProvider)throw f.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:t.chainId}]})}catch(e){if(4902!==e.code)throw e;await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:t.chainId,chainName:t.displayName,rpcUrls:[t.rpcTarget]}]})}}}}}]);