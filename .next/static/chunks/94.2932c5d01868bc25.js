"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[94],{86094:function(e,t,n){n.r(t),n.d(t,{OpenloginAdapter:function(){return p},getOpenloginDefaultOptions:function(){return s}});var i=n(3388),r=n(16843),o=n(4942),a=n(72378),c=n.n(a);const s=(e,t)=>({adapterSettings:{network:i.dr.MAINNET,clientId:"",uxMode:i.$e.POPUP},chainConfig:e?(0,r.h2)(e,t):void 0,loginSettings:{relogin:!0}});function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){(0,o.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}class p extends r.J5{constructor(e){var t,n,a;super(),(0,o.Z)(this,"name",r.rW.OPENLOGIN),(0,o.Z)(this,"adapterNamespace",r.yk.MULTICHAIN),(0,o.Z)(this,"type",r.hN.IN_APP),(0,o.Z)(this,"openloginInstance",null),(0,o.Z)(this,"status",r.MP.NOT_READY),(0,o.Z)(this,"currentChainNamespace",r.EN.EIP155),(0,o.Z)(this,"openloginOptions",void 0),(0,o.Z)(this,"loginSettings",{}),(0,o.Z)(this,"privKeyProvider",null),r.cM.debug("const openlogin adapter",e);const c=s(null===(t=e.chainConfig)||void 0===t?void 0:t.chainNamespace,null===(n=e.chainConfig)||void 0===n?void 0:n.chainId);if(this.openloginOptions=h(h({clientId:"",network:i.dr.MAINNET},c.adapterSettings),e.adapterSettings||{}),this.loginSettings=h(h({},c.loginSettings),e.loginSettings),null!==(a=e.chainConfig)&&void 0!==a&&a.chainNamespace){var l;this.currentChainNamespace=null===(l=e.chainConfig)||void 0===l?void 0:l.chainNamespace;const t=c.chainConfig?c.chainConfig:{};if(this.chainConfig=h(h({},t),null===e||void 0===e?void 0:e.chainConfig),r.cM.debug("const openlogin chainConfig",this.chainConfig),!this.chainConfig.rpcTarget)throw r.Ty.invalidParams("rpcTarget is required in chainConfig")}}get chainConfigProxy(){return this.chainConfig?h({},this.chainConfig):null}get provider(){var e;return(null===(e=this.privKeyProvider)||void 0===e?void 0:e.provider)||null}set provider(e){throw new Error("Not implemented")}async init(e){var t;if(super.checkInitializationRequirements(),null===(t=this.openloginOptions)||void 0===t||!t.clientId)throw r.Ty.invalidParams("clientId is required before openlogin's initialization");if(!this.chainConfig)throw r.Ty.invalidParams("chainConfig is required before initialization");this.openloginInstance=new i.ZP(this.openloginOptions);const n=(0,i.Gv)();let o=!0;Object.keys(n).length>0&&n.result&&(o=!0),await this.openloginInstance.init(),this.status=r.MP.READY,this.emit(r.n2.READY,r.rW.OPENLOGIN);try{this.openloginInstance.privKey&&(e.autoConnect||o)&&await this.connect()}catch(a){r.cM.error("Failed to connect with cached openlogin provider",a),this.emit("ERRORED",a)}}async connect(e){super.checkConnectionRequirements(),this.status=r.MP.CONNECTING,this.emit(r.n2.CONNECTING,h(h({},e),{},{adapter:r.rW.OPENLOGIN}));try{return await this.connectWithProvider(e),this.provider}catch(t){if(r.cM.error("Failed to connect with openlogin provider",t),this.status=r.MP.READY,this.emit(r.n2.ERRORED,t),null!==t&&void 0!==t&&t.message.includes("user closed popup"))throw r.RM.popupClosed();throw r.RM.connectionError("Failed to login with openlogin")}}async disconnect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==r.MP.CONNECTED)throw r.RM.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw r.Ty.notReady("openloginInstance is not ready");await this.openloginInstance.logout(),e.cleanup?(this.status=r.MP.NOT_READY,this.openloginInstance=null,this.privKeyProvider=null):this.status=r.MP.READY,this.emit(r.n2.DISCONNECTED)}async getUserInfo(){if(this.status!==r.MP.CONNECTED)throw r.RM.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw r.Ty.notReady("openloginInstance is not ready");return await this.openloginInstance.getUserInfo()}setAdapterSettings(e){if(this.status===r.MP.READY)return;const t=s();this.openloginOptions=h(h(h({},t.adapterSettings),this.openloginOptions||{}),e)}setChainConfig(e){super.setChainConfig(e),this.currentChainNamespace=e.chainNamespace}async connectWithProvider(e){if(!this.chainConfig)throw r.Ty.invalidParams("chainConfig is required before initialization");if(!this.openloginInstance)throw r.Ty.notReady("openloginInstance is not ready");if(this.currentChainNamespace===r.EN.SOLANA){const{SolanaPrivateKeyProvider:e}=await Promise.all([n.e(662),n.e(766),n.e(351),n.e(108),n.e(657),n.e(481)]).then(n.bind(n,54877));this.privKeyProvider=new e({config:{chainConfig:this.chainConfig}})}else{if(this.currentChainNamespace!==r.EN.EIP155)throw new Error("Invalid chainNamespace: ".concat(this.currentChainNamespace," found while connecting to wallet"));{const{EthereumPrivateKeyProvider:e}=await Promise.all([n.e(662),n.e(482),n.e(351),n.e(747),n.e(961),n.e(879)]).then(n.bind(n,10961));this.privKeyProvider=new e({config:{chainConfig:this.chainConfig}})}}!this.openloginInstance.privKey&&e&&await this.openloginInstance.login(c()(this.loginSettings,{loginProvider:e.loginProvider},{extraLoginOptions:{login_hint:null===e||void 0===e?void 0:e.login_hint}}));let t=this.openloginInstance.privKey;if(t){if(this.currentChainNamespace===r.EN.SOLANA){const{getED25519Key:e}=await Promise.all([n.e(108),n.e(418)]).then(n.bind(n,33946));t=e(t).sk.toString("hex")}await this.privKeyProvider.setupProvider(t),this.status=r.MP.CONNECTED,this.emit(r.n2.CONNECTED,{adapter:r.rW.OPENLOGIN,reconnected:!e})}}}},16843:function(e,t,n){n.d(t,{hN:function(){return w},n2:function(){return T},yk:function(){return p},MP:function(){return I},J5:function(){return k},EN:function(){return h},rW:function(){return C},Ty:function(){return f},RM:function(){return m},h2:function(){return u},H2:function(){return D},cM:function(){return A}});var i=n(4942),r=n(95844),o=n(13631),a=n(2043),c=n.n(a);function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){(0,i.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}const h={EIP155:"eip155",SOLANA:"solana"},p=l(l({},h),{},{MULTICHAIN:"multichain"}),d="776218ac4734478c90191dde8cae483c",u=(e,t)=>{const n=t?"number"===typeof t?t:parseInt(t,16):(e=>{if(e===h.EIP155)return 1;if(e===h.SOLANA)return 1;throw new Error("Chain namespace ".concat(e," is not supported"))})(e);return e===h.EIP155?(e=>{const t=h.EIP155;return 1===e?{chainNamespace:t,chainId:"0x1",rpcTarget:"https://mainnet.infura.io/v3/".concat(d),displayName:"Ethereum Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:3===e?{chainNamespace:t,chainId:"0x3",rpcTarget:"https://ropsten.infura.io/v3/".concat(d),displayName:"ropsten",blockExplorer:"https://ropsten.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:4===e?{chainNamespace:t,chainId:"0x4",rpcTarget:"https://rinkeby.infura.io/v3/".concat(d),displayName:"rinkeby",blockExplorer:"https://rinkeby.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:5===e?{chainNamespace:t,chainId:"0x5",rpcTarget:"https://goerli.infura.io/v3/".concat(d),displayName:"goerli",blockExplorer:"https://goerli.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:42===e?{chainNamespace:t,chainId:"0x2a",rpcTarget:"https://kovan.infura.io/v3/".concat(d),displayName:"kovan",blockExplorer:"https://kovan.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:137===e?{chainNamespace:t,rpcTarget:"https://polygon-rpc.com",blockExplorer:"https://polygonscan.com",chainId:"0x89",displayName:"Polygon Mainnet",ticker:"matic",tickerName:"matic"}:80001===e?{chainNamespace:t,rpcTarget:"https://rpc-mumbai.maticvigil.com",blockExplorer:"https://mumbai-explorer.matic.today",chainId:"0x13881",displayName:"Polygon Mumbai Testnet",ticker:"matic",tickerName:"matic"}:56===e?{chainNamespace:t,rpcTarget:"https://bsc-dataseed.binance.org",blockExplorer:"https://bscscan.com",chainId:"0x38",displayName:"Binance SmartChain Mainnet",ticker:"BNB",tickerName:"BNB"}:97===e?{chainNamespace:t,rpcTarget:"https://data-seed-prebsc-2-s3.binance.org:8545",blockExplorer:"https://testnet.bscscan.com",chainId:"0x61",displayName:"Binance SmartChain Testnet",ticker:"BNB",tickerName:"BNB"}:null})(n):e===h.SOLANA?(e=>{const t=h.SOLANA;return 1===e?{chainNamespace:t,blockExplorer:"https://explorer.solana.com",chainId:"0x1",displayName:"Solana Mainnet",rpcTarget:"https://api.mainnet-beta.solana.com",ticker:"SOL",tickerName:"Solana Token"}:2===e?{rpcTarget:"https://api.testnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=testnet",chainId:"0x2",chainNamespace:t,displayName:"testnet",ticker:"SOL",tickerName:"solana"}:3===e?{rpcTarget:"https://api.devnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=devnet",chainId:"0x3",chainNamespace:t,displayName:"devnet",ticker:"SOL",tickerName:"solana"}:null})(n):null};class g extends o.s{constructor(e,t){super(t),(0,i.Z)(this,"code",void 0),(0,i.Z)(this,"message",void 0),this.code=e,this.message=t||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class f extends g{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new f(e,"".concat(f.messages[e],", ").concat(t))}static notFound(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5001,e)}static notInstalled(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5002,e)}static notReady(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5003,e)}static windowBlocked(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5004,e)}static windowClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5005,e)}static incompatibleChainNameSpace(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5006,e)}static duplicateAdapterError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5007,e)}static invalidProviderConfigError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5008,e)}static providerNotReadyError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5009,e)}static rpcConnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5010,e)}static invalidParams(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5011,e)}static invalidNetwork(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5013,e)}}(0,i.Z)(f,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class m extends g{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new m(e,"".concat(m.messages[e]).concat(t))}static connectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5111,e)}static disconnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5112,e)}static notConnectedError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5113,e)}static popupClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5114,e)}}function N(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function O(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?N(Object(n),!0).forEach((function(t){(0,i.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}(0,i.Z)(m,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user"});const y={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},v=O({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom"},y),E=O({TORUS_EVM:"torus-evm",METAMASK:"metamask"},y),C=O(O({},E),v);function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function P(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){(0,i.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}const w={EXTERNAL:"external",IN_APP:"in_app"},I={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},T=P(P({},I),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});class k extends r.Ue{constructor(){super(...arguments),(0,i.Z)(this,"adapterData",{}),(0,i.Z)(this,"chainConfig",null)}get chainConfigProxy(){return this.chainConfig?P({},this.chainConfig):null}setChainConfig(e){if(this.status===I.READY)return;if(!e.chainNamespace)throw f.notReady("ChainNamespace is required while setting chainConfig");const t=u(e.chainNamespace,e.chainId);this.chainConfig=P(P({},t),e)}setAdapterSettings(e){}checkConnectionRequirements(){if(this.name!==C.WALLET_CONNECT_V1||this.status!==I.CONNECTING){if(this.status===I.CONNECTING)throw f.notReady("Already connecting");if(this.status===I.CONNECTED)throw m.connectionError("Already connected");if(this.status!==I.READY)throw m.connectionError("Wallet adapter is not ready yet")}}checkInitializationRequirements(){if(this.status!==I.NOT_READY){if(this.status===I.CONNECTED)throw f.notReady("Already connected");if(this.status===I.READY)throw f.notReady("Adapter is already initialized")}}updateAdapterData(e){this.adapterData=e,this.emit(T.ADAPTER_DATA_UPDATED,{adapterName:this.name,data:e})}}var A=c().getLogger("web3auth-logger");const D=e=>("string"===typeof e||"number"===typeof e)&&/^(-)?0x[0-9a-f]*$/i.test(e)}}]);