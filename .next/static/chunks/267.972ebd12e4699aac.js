"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[267],{53267:function(e,t,r){r.r(t),r.d(t,{PhantomAdapter:function(){return ie}});var n=r(4942),i=r(95844),a=r(13631),o=r(2043),s=r.n(o);function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function h(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const l={EIP155:"eip155",SOLANA:"solana"},d=h(h({},l),{},{MULTICHAIN:"multichain"}),p="776218ac4734478c90191dde8cae483c",u=(e,t)=>{const r=t?"number"===typeof t?t:parseInt(t,16):(e=>{if(e===l.EIP155)return 1;if(e===l.SOLANA)return 1;throw new Error("Chain namespace ".concat(e," is not supported"))})(e);return e===l.EIP155?(e=>{const t=l.EIP155;return 1===e?{chainNamespace:t,chainId:"0x1",rpcTarget:"https://mainnet.infura.io/v3/".concat(p),displayName:"Ethereum Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:3===e?{chainNamespace:t,chainId:"0x3",rpcTarget:"https://ropsten.infura.io/v3/".concat(p),displayName:"ropsten",blockExplorer:"https://ropsten.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:4===e?{chainNamespace:t,chainId:"0x4",rpcTarget:"https://rinkeby.infura.io/v3/".concat(p),displayName:"rinkeby",blockExplorer:"https://rinkeby.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:5===e?{chainNamespace:t,chainId:"0x5",rpcTarget:"https://goerli.infura.io/v3/".concat(p),displayName:"goerli",blockExplorer:"https://goerli.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:42===e?{chainNamespace:t,chainId:"0x2a",rpcTarget:"https://kovan.infura.io/v3/".concat(p),displayName:"kovan",blockExplorer:"https://kovan.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:137===e?{chainNamespace:t,rpcTarget:"https://polygon-rpc.com",blockExplorer:"https://polygonscan.com",chainId:"0x89",displayName:"Polygon Mainnet",ticker:"matic",tickerName:"matic"}:80001===e?{chainNamespace:t,rpcTarget:"https://rpc-mumbai.maticvigil.com",blockExplorer:"https://mumbai-explorer.matic.today",chainId:"0x13881",displayName:"Polygon Mumbai Testnet",ticker:"matic",tickerName:"matic"}:56===e?{chainNamespace:t,rpcTarget:"https://bsc-dataseed.binance.org",blockExplorer:"https://bscscan.com",chainId:"0x38",displayName:"Binance SmartChain Mainnet",ticker:"BNB",tickerName:"BNB"}:97===e?{chainNamespace:t,rpcTarget:"https://data-seed-prebsc-2-s3.binance.org:8545",blockExplorer:"https://testnet.bscscan.com",chainId:"0x61",displayName:"Binance SmartChain Testnet",ticker:"BNB",tickerName:"BNB"}:null})(r):e===l.SOLANA?(e=>{const t=l.SOLANA;return 1===e?{chainNamespace:t,blockExplorer:"https://explorer.solana.com",chainId:"0x1",displayName:"Solana Mainnet",rpcTarget:"https://api.mainnet-beta.solana.com",ticker:"SOL",tickerName:"Solana Token"}:2===e?{rpcTarget:"https://api.testnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=testnet",chainId:"0x2",chainNamespace:t,displayName:"testnet",ticker:"SOL",tickerName:"solana"}:3===e?{rpcTarget:"https://api.devnet.solana.com",blockExplorer:"https://explorer.solana.com?cluster=devnet",chainId:"0x3",chainNamespace:t,displayName:"devnet",ticker:"SOL",tickerName:"solana"}:null})(r):null};class g extends a.s{constructor(e,t){super(t),(0,n.Z)(this,"code",void 0),(0,n.Z)(this,"message",void 0),this.code=e,this.message=t||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class m extends g{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new m(e,"".concat(m.messages[e],", ").concat(t))}static notFound(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5001,e)}static notInstalled(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5002,e)}static notReady(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5003,e)}static windowBlocked(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5004,e)}static windowClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5005,e)}static incompatibleChainNameSpace(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5006,e)}static duplicateAdapterError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5007,e)}static invalidProviderConfigError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5008,e)}static providerNotReadyError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5009,e)}static rpcConnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5010,e)}static invalidParams(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5011,e)}static invalidNetwork(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return m.fromCode(5013,e)}}(0,n.Z)(m,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class f extends g{constructor(e,t){super(e,t),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new f(e,"".concat(f.messages[e]).concat(t))}static connectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5111,e)}static disconnectionError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5112,e)}static notConnectedError(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5113,e)}static popupClosed(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5114,e)}}function v(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function y(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?v(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):v(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}(0,n.Z)(f,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user"});const w={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},E=y({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom"},w),O=y({TORUS_EVM:"torus-evm",METAMASK:"metamask"},w),P=y(y({},O),E);function b(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function C(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?b(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const N="external",A={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},k=C(C({},A),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});class T extends i.Ue{constructor(){super(...arguments),(0,n.Z)(this,"adapterData",{}),(0,n.Z)(this,"chainConfig",null)}get chainConfigProxy(){return this.chainConfig?C({},this.chainConfig):null}setChainConfig(e){if(this.status===A.READY)return;if(!e.chainNamespace)throw m.notReady("ChainNamespace is required while setting chainConfig");const t=u(e.chainNamespace,e.chainId);this.chainConfig=C(C({},t),e)}setAdapterSettings(e){}checkConnectionRequirements(){if(this.name!==P.WALLET_CONNECT_V1||this.status!==A.CONNECTING){if(this.status===A.CONNECTING)throw m.notReady("Already connecting");if(this.status===A.CONNECTED)throw f.connectionError("Already connected");if(this.status!==A.READY)throw f.connectionError("Wallet adapter is not ready yet")}}checkInitializationRequirements(){if(this.status!==A.NOT_READY){if(this.status===A.CONNECTED)throw m.notReady("Already connected");if(this.status===A.READY)throw m.notReady("Adapter is already initialized")}}updateAdapterData(e){this.adapterData=e,this.emit(k.ADAPTER_DATA_UPDATED,{adapterName:this.name,data:e})}}var j=s().getLogger("web3auth-logger");var D=r(22782),I=r(79826),_=r(23420),x=r.n(_);function S(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function R(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?S(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):S(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class M extends D.xG{constructor(e){let{config:t,state:r}=e;if(super({config:t,state:r}),(0,n.Z)(this,"_providerEngineProxy",null),!t.chainConfig)throw m.invalidProviderConfigError("Please provide chainConfig");if(!t.chainConfig.chainId)throw m.invalidProviderConfigError("Please provide chainId inside chainConfig");if(!t.chainConfig.rpcTarget)throw m.invalidProviderConfigError("Please provide rpcTarget inside chainConfig");this.defaultState={chainId:"loading"},this.defaultConfig={chainConfig:t.chainConfig,networks:{[t.chainConfig.chainId]:t.chainConfig}},super.initialize()}get provider(){return this._providerEngineProxy}set provider(e){throw new Error("Method not implemented.")}addChain(e){if(!e.chainId)throw I.ethErrors.rpc.invalidParams("chainId is required");if(!e.rpcTarget)throw I.ethErrors.rpc.invalidParams("chainId is required");this.configure({networks:R(R({},this.config.networks),{},{[e.chainId]:e})})}getChainConfig(e){var t;const r=null===(t=this.config.networks)||void 0===t?void 0:t[e];if(!r)throw I.ethErrors.rpc.invalidRequest("Chain ".concat(e," is not supported, please add chainConfig for it"));return r}getProviderEngineProxy(){return this._providerEngineProxy}updateProviderEngineProxy(e){this._providerEngineProxy?this._providerEngineProxy.setTarget(e):this._providerEngineProxy=(0,D.qY)(e)}}x()();var q=r(59917),K=r(77191),Z=r.n(K),W=r(50108),L=r.n(W),Y=r(48764).Buffer;function B(e){let{getAccounts:t}=e;return(0,i.Pk)((async(e,r,n)=>{const{method:i}=e;if("getAccounts"!==i)return n();if(!t)throw new Error("WalletMiddleware - opts.getAccounts not provided");const a=await t(e);r.result=a}))}function U(e){let{requestAccounts:t}=e;return(0,i.Pk)((async(e,r,n)=>{const{method:i}=e;if("requestAccounts"!==i)return n();if(!t)throw new Error("WalletMiddleware - opts.requestAccounts not provided");const a=await t(e);r.result=a}))}function H(e,t){return(0,i.Pk)((async(r,n,i)=>{const{method:a}=r;if(a!==e)return i();if(!t)throw new Error("WalletMiddleware - ".concat(e," not provided"));const o=await t(r);n.result=o}))}function z(e){const{getAccounts:t,requestAccounts:r,signTransaction:n,signAndSendTransaction:a,signAllTransactions:o,signMessage:s,getPrivateKey:c}=e;return(0,i.UZ)([U({requestAccounts:r}),B({getAccounts:t}),H("signTransaction",n),H("signAndSendTransaction",a),H("signAllTransactions",o),H("signMessage",s),H("solanaPrivateKey",c)])}function G(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function F(e){return(0,i.Pk)((async(t,r,i)=>{const a=await e.request(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?G(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):G(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},t));r.result=a}))}function V(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function J(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?V(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):V(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class X extends M{constructor(e){let{config:t,state:r}=e;super({config:{chainConfig:J(J({},t.chainConfig),{},{chainNamespace:l.SOLANA})},state:r})}async switchChain(e){return Promise.resolve()}async setupProvider(e){const t=(e=>({requestAccounts:async()=>e.publicKey?[Z().encode(e.publicKey.toBytes())]:[],getAccounts:async()=>e.publicKey?[Z().encode(e.publicKey.toBytes())]:[],getPrivateKey:async()=>{throw I.ethErrors.rpc.methodNotSupported()},signTransaction:async t=>{const r=Z().decode(t.params.message),n=q.YW.from(r);return await e.signTransaction(n)},signMessage:async t=>{var r;return await e.request({method:"signMessage",params:{message:null===(r=t.params)||void 0===r?void 0:r.message}})},signAndSendTransaction:async t=>{const r=Z().decode(t.params.message),n=q.YW.from(r);return{signature:(await e.signAndSendTransaction(n)).signature}},signAllTransactions:async t=>{var r,n;if(null===(r=t.params)||void 0===r||!r.message||null===(n=t.params)||void 0===n||!n.message.length)throw I.ethErrors.rpc.invalidParams("message");const i=t.params.message.map((e=>{const t=Z().decode(e);return q.YW.from(t)}));return await e.signAllTransactions(i)}}))(e),r=z(t),n=F(e),a=new i.eI;a.push(r),a.push(n);const o=(0,D.Xj)(a);this.updateProviderEngineProxy(o),await this.lookupNetwork(e)}async lookupNetwork(e){const{chainConfig:t}=this.config;return this.update({chainId:t.chainId}),t.chainId||""}}function $(e){return(t,r,n,i)=>"solana_chainId"===t.method?(r.result=e,i()):n()}function Q(e){return(t,r,n,i)=>"solana_provider_config"===t.method?(r.result=e,i()):n()}function ee(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function te(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ee(Object(r),!0).forEach((function(t){(0,n.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ee(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class re extends M{constructor(e){let{config:t,state:r}=e;super({config:{chainConfig:te(te({},t.chainConfig),{},{chainNamespace:l.SOLANA})},state:r})}async enable(){if(!this.state.privateKey)throw I.ethErrors.provider.custom({message:"Private key is not found in state, plz pass it in constructor state param",code:4902});return await this.setupProvider(this.state.privateKey),this._providerEngineProxy.request({method:"eth_accounts"})}async setupProvider(e){const t=await async function(e){let{privKey:t,getProviderEngineProxy:r}=e;const n=e=>{const t=Z().decode(e);return q.YW.from(t)};if("string"!==typeof t)throw m.invalidParams("privKey must be a string");const i=q.RG.fromSecretKey(Y.from(t,"hex"));return{requestAccounts:async()=>[i.publicKey.toBase58()],getAccounts:async()=>[i.publicKey.toBase58()],getPrivateKey:async()=>t,signTransaction:async e=>{var t,r;if(null===(t=e.params)||void 0===t||!t.message)throw I.ethErrors.rpc.invalidParams("message");const a=n(null===(r=e.params)||void 0===r?void 0:r.message);return a.partialSign(i),a},signMessage:async e=>{var t;if(null===(t=e.params)||void 0===t||!t.message)throw I.ethErrors.rpc.invalidParams("message");return L().sign.detached(e.params.message,i.secretKey)},signAndSendTransaction:async e=>{var t,a;if(null===(t=e.params)||void 0===t||!t.message)throw I.ethErrors.rpc.invalidParams("message");const o=r();if(!o)throw I.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const s=n(null===(a=e.params)||void 0===a?void 0:a.message);return s.sign(i),{signature:await o.request({method:"sendTransaction",params:[Z().encode(s.serialize())]})}},signAllTransactions:async e=>{var t,r;if(null===(t=e.params)||void 0===t||!t.message||null===(r=e.params)||void 0===r||!r.message.length)throw I.ethErrors.rpc.invalidParams("message");const a=[];for(const s of(null===(o=e.params)||void 0===o?void 0:o.message)||[]){var o;const e=n(s);e.partialSign(i),a.push(e)}return a}}}({privKey:e,getProviderEngineProxy:this.getProviderEngineProxy.bind(this)}),r=z(t),n=new i.eI,{networkMiddleware:a}=function(e){const{chainId:t,rpcTarget:r}=e,n=(0,D.v$)({rpcTarget:r});return{networkMiddleware:(0,i.UZ)([$(t),Q(e),n]),fetchMiddleware:n}}(this.config.chainConfig);n.push(this.getChainSwitchMiddleware()),n.push(this.getAccountMiddleware()),n.push(r),n.push(a);const o=(0,D.Xj)(n);this.updateProviderEngineProxy(o),await this.lookupNetwork()}async updateAccount(e){if(!this._providerEngineProxy)throw I.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});await this._providerEngineProxy.request({method:"solanaPrivateKey"})!==e.privateKey&&(await this.setupProvider(e.privateKey),this._providerEngineProxy.emit("accountsChanged",{accounts:await this._providerEngineProxy.request({method:"requestAccounts"})}))}async switchChain(e){if(!this._providerEngineProxy)throw I.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const t=this.getChainConfig(e.chainId);this.update({chainId:"loading"}),this.configure({chainConfig:t});const r=await this._providerEngineProxy.request({method:"solanaPrivateKey"});await this.setupProvider(r)}async lookupNetwork(){if(!this._providerEngineProxy)throw I.ethErrors.provider.custom({message:"Provider is not initialized",code:4902});const e=await this._providerEngineProxy.request({method:"getHealth",params:[]}),{chainConfig:t}=this.config;if("ok"!==e)throw m.rpcConnectionError("Failed to lookup network for following rpc target: ".concat(t.rpcTarget));return this.update({chainId:t.chainId}),this.state.chainId!==t.chainId&&(this.provider.emit("chainChanged",this.state.chainId),this.provider.emit("connect",{chainId:this.state.chainId})),this.state.chainId}getChainSwitchMiddleware(){return function(e){let{addNewChainConfig:t,switchSolanaChain:r}=e;return(0,i.UZ)([H("addSolanaChain",t),H("switchSolanaChain",r)])}({addNewChainConfig:async e=>{if(!e.params)throw I.ethErrors.rpc.invalidParams("Missing request params");const{chainId:t,chainName:r,rpcUrls:n,blockExplorerUrls:i,nativeCurrency:a}=e.params;if(!t)throw I.ethErrors.rpc.invalidParams("Missing chainId in chainParams");if(!n||0===n.length)throw I.ethErrors.rpc.invalidParams("Missing rpcUrls in chainParams");if(!a)throw I.ethErrors.rpc.invalidParams("Missing nativeCurrency in chainParams");this.addChain({chainNamespace:l.SOLANA,chainId:t,ticker:(null===a||void 0===a?void 0:a.symbol)||"SOL",tickerName:(null===a||void 0===a?void 0:a.name)||"Solana",displayName:r,rpcTarget:n[0],blockExplorer:(null===i||void 0===i?void 0:i[0])||""})},switchSolanaChain:async e=>{if(!e.params)throw I.ethErrors.rpc.invalidParams("Missing request params");if(!e.params.chainId)throw I.ethErrors.rpc.invalidParams("Missing chainId");await this.switchChain(e.params)}})}getAccountMiddleware(){return function(e){let{updatePrivatekey:t}=e;return(0,i.UZ)([H("updateAccount",t)])}({updatePrivatekey:async e=>{if(!e.params)throw I.ethErrors.rpc.invalidParams("Missing request params");if(!e.params.privateKey)throw I.ethErrors.rpc.invalidParams("Missing privateKey");const{privateKey:t}=e.params;await this.updateAccount({privateKey:t})}})}}(0,n.Z)(re,"getProviderInstance",(async e=>{const t=new re({config:{chainConfig:e.chainConfig}});return await t.setupProvider(e.privKey),t}));function ne(e,t,r){return new Promise(((n,i)=>{r>0?setTimeout((async()=>{const a=await e();a&&n(a),a||ne(e,t,r-1).then((e=>(n(e),e))).catch((e=>i(e)))}),t):n(!1)}))}class ie extends T{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,n.Z)(this,"name",P.PHANTOM),(0,n.Z)(this,"adapterNamespace",d.SOLANA),(0,n.Z)(this,"currentChainNamespace",l.SOLANA),(0,n.Z)(this,"type",N),(0,n.Z)(this,"status",A.NOT_READY),(0,n.Z)(this,"_wallet",null),(0,n.Z)(this,"phantomProvider",null),(0,n.Z)(this,"rehydrated",!1),(0,n.Z)(this,"_onDisconnect",(()=>{this._wallet&&(this._wallet.off("disconnect",this._onDisconnect),this.rehydrated=!1,this.status=this.status===A.CONNECTED?A.READY:A.NOT_READY,this.emit(k.DISCONNECTED))})),this.chainConfig=e.chainConfig||null}get isWalletConnected(){var e;return!(null===(e=this._wallet)||void 0===e||!e.isConnected||this.status!==A.CONNECTED)}get provider(){var e;return(null===(e=this.phantomProvider)||void 0===e?void 0:e.provider)||null}set provider(e){throw new Error("Not implemented")}setAdapterSettings(e){}async init(e){if(super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=u(l.SOLANA,"0x1")),this._wallet=await async function(){var e;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{interval:1e3,count:3};if("undefined"!==typeof window&&null!==(e=window.solana)&&void 0!==e&&e.isPhantom)return window.solana;return await ne((()=>{var e;return null===(e=window.solana)||void 0===e?void 0:e.isPhantom}),t.interval,t.count)?window.solana:null}({interval:500,count:3}),!this._wallet)throw m.notInstalled();this.phantomProvider=new X({config:{chainConfig:this.chainConfig}}),this.status=A.READY,this.emit(k.READY,P.PHANTOM);try{e.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(t){j.error("Failed to connect with cached phantom provider",t),this.emit("ERRORED",t)}}async connect(){var e=this;try{if(super.checkConnectionRequirements(),this.status=A.CONNECTING,this.emit(k.CONNECTING,{adapter:P.PHANTOM}),!this._wallet)throw m.notInstalled();if(this._wallet.isConnected)await this.connectWithProvider(this._wallet);else{const r=this._wallet._handleDisconnect;try{await new Promise(((t,n)=>{if(!this._wallet)return n(m.notInstalled());this._wallet.once("connect",(async()=>{await this.connectWithProvider(this._wallet),t(this.provider)})),this._wallet._handleDisconnect=function(){n(m.windowClosed());for(var t=arguments.length,i=new Array(t),a=0;a<t;a++)i[a]=arguments[a];return r.apply(e._wallet,i)},this._wallet.connect().catch((e=>{n(e)}))}))}catch(t){if(t instanceof g)throw t;throw f.connectionError(null===t||void 0===t?void 0:t.message)}finally{this._wallet._handleDisconnect=r}}if(!this._wallet.publicKey)throw f.connectionError();return this._wallet.on("disconnect",this._onDisconnect),this.provider}catch(t){throw this.status=A.READY,this.rehydrated=!1,this.emit(k.ERRORED,t),t}}async disconnect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(!this.isWalletConnected)throw f.notConnectedError("Not connected with wallet");try{var t;await(null===(t=this._wallet)||void 0===t?void 0:t.disconnect()),e.cleanup&&(this.status=A.NOT_READY,this.phantomProvider=null,this._wallet=null),this.emit(k.DISCONNECTED)}catch(r){this.emit(k.ERRORED,f.disconnectionError(null===r||void 0===r?void 0:r.message))}}async getUserInfo(){if(!this.isWalletConnected)throw f.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async connectWithProvider(e){if(!this.phantomProvider)throw f.connectionError("No phantom provider");return await this.phantomProvider.setupProvider(e),this.status=A.CONNECTED,this.emit(k.CONNECTED,{adapter:P.PHANTOM,reconnected:this.rehydrated}),this.provider}}}}]);